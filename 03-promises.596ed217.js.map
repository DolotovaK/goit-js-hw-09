{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACkBC,SAASC,cAAc,UAAzC,MACMC,EAAcF,SAASC,cAAc,sBACrCE,EAAaH,SAASC,cAAc,qBACpCG,EAAYJ,SAASC,cAAc,oBACnCI,EAAOL,SAASC,cAAc,SAWpC,SAASK,EAAcC,EAAUC,GAI/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,EAAa,C,SAAER,E,MAAUC,GAC7BQ,YAAW,KACLJ,EACFF,EAAQK,GAERJ,EAAOI,KAERP,MAtBPH,EAAKY,iBAAiB,UAgCtB,SAAyBC,GACvBA,EAAIC,iBACJ,IAAIC,EAAaC,OAAOlB,EAAWmB,OAC/BC,EAAYF,OAAOjB,EAAUkB,OAC7BE,EAAcH,OAAOnB,EAAYoB,OAErC,IAAK,IAAIG,EAAI,EAAG,GAAKD,EAAaC,GAAK,EAAG,CAExCnB,EADemB,EACSL,GACrBM,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBtB,QAAiBC,UAGzCsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBxB,QAAiBC,UAG3CY,GAAcG,MAjDlBS,QAAQC,IAAI5B,EAAK6B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst createBtn = document.querySelector('button');\nconst amountInput = document.querySelector('input[name=amount]');\nconst delayInput = document.querySelector('input[name=delay]');\nconst stepInput = document.querySelector('input[name=step]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromise);\n\nconsole.log(form.elements);\n\n// const inputValues = {\n//   delay,\n//   position,\n// };\n\nfunction createPromise(position, delay) {\n  // delay = delayInput[0].value;\n  // position = amountInput[0].value;\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    let promiseObj = { position, delay };\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(promiseObj);\n      } else {\n        reject(promiseObj);\n      }\n    }, delay);\n  });\n  // .then(({ position, delay }) => {\n  //   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });\n}\n\nfunction onCreatePromise(evt) {\n  evt.preventDefault();\n  let delayValue = Number(delayInput.value);\n  let stepValue = Number(stepInput.value);\n  let amountValue = Number(amountInput.value);\n\n  for (let i = 1; 1 <= amountValue; i += 1) {\n    let position = i;\n    createPromise(position, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","promiseObj","setTimeout","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure","console","log","elements"],"version":3,"file":"03-promises.596ed217.js.map"}